{
	"info": {
		"_postman_id": "c1857a66-d871-4bb9-ae67-7a1c9325c63b",
		"name": "Ercon",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentications",
			"item": [
				{
					"name": "LOGIN VALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"toyota\",\r\n    \"password\": \"toyota\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 401', () => {\r",
									"   pm.response.to.have.status(401);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('error');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(false);\r",
									"    pm.expect(responseJson.error).to.be.a('string');\r",
									"    pm.expect(responseJson.error).to.not.equals('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{toyotaUsername}}\",\r\n    \"password\": \"xxxx\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "GET USERNAME",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should 200', () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('response Content-Type should application/json', () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"});\r",
									"\r",
									"pm.test('response body shoud contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson).to.haveOwnProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('string');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/username",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"username"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PASSWORD VALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status should be 200', () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('response Content-Type should application/json', () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"});\r",
									"\r",
									"pm.test('response body shoud contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson).to.haveOwnProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.a('string');\r",
									"    pm.expect(responseJson.data).to.not.equals('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cur_password\": \"{{toyotaPassword}}\",\r\n    \"new_password\": \"{{toyotaUsername}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/password",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PASSWORD INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status should be 200', () => {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test('response Content-Type should application/json', () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"});\r",
									"\r",
									"pm.test('response body shoud contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson).to.haveOwnProperty('error');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(false);\r",
									"    pm.expect(responseJson.error).to.be.a('string');\r",
									"    pm.expect(responseJson.error).to.not.equals('');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cur_password\": \"xxx\",\r\n    \"new_password\": \"{{toyotaUsername}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/password",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Companies",
			"item": [
				{
					"name": "LIST COMPANY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should 200', () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('response Content-Type should application/json', () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"});\r",
									"\r",
									"pm.test('response body shoud contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson).to.haveOwnProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test('response body data should contains array companies and have only 1 item', () => {\r",
									"    const { data } = pm.response.json();\r",
									"\r",
									"    pm.expect(data).to.be.an('array');\r",
									"    pm.expect(data).lengthOf.at.least(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/companies",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST COMPANY BELOW",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/companies/below",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies",
								"below"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET MY COMPANY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should 200', () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('response Content-Type should application/json', () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"});\r",
									"\r",
									"pm.test('response body shoud contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson).to.haveOwnProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/companies/my",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies",
								"my"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET NAME",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should 200', () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('response Content-Type should application/json', () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"});\r",
									"\r",
									"pm.test('response body shoud contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson).to.haveOwnProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/companies/name",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD COMPANY VALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status response should be 201', () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test('response Content-Type should application/json', () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"});\r",
									"\r",
									"pm.test('response body should contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson).to.haveOwnProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test('response body data should contains id_user and id_company', () => {\r",
									"    const { data } = pm.response.json();\r",
									"\r",
									"    pm.expect(data).to.haveOwnProperty('user');\r",
									"    pm.expect(data.user).to.be.a('object');\r",
									"\r",
									"    pm.expect(data).to.haveOwnProperty('company');\r",
									"    pm.expect(data.company).to.be.a('object');\r",
									"\r",
									"    pm.expect(data.user).to.haveOwnProperty('id_user');\r",
									"    pm.expect(data.user.id_user).to.be.a('number');\r",
									"    pm.expect(data.user.id_user).to.not.equals('');\r",
									"\r",
									"    pm.expect(data.company).to.haveOwnProperty('id_company');\r",
									"    pm.expect(data.company.id_company).to.be.a('number');\r",
									"    pm.expect(data.company.id_company).to.not.equals('');\r",
									"\r",
									"    pm.environment.set('newIdUser', data.user.id_user);\r",
									"    pm.environment.set('newIdCompany', data.company.id_company);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{dummy}}\",\r\n    \"password\": \"{{dummy}}\",\r\n    \"level\": 1,\r\n    \"name\": \"{{dummy}}\",\r\n    \"address\": \"{{dummy}}\",\r\n    \"phone\": \"{{dummy}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/companies",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD COMPANY DUPLICATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status response should be 201', () => {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test('response Content-Type should application/json', () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"});\r",
									"\r",
									"pm.test('response body should contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson).to.haveOwnProperty('error');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(false);\r",
									"    pm.expect(responseJson.error).to.be.an('string');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{dummy}}\",\r\n    \"password\": \"{{dummy}}\",\r\n    \"level\": 1,\r\n    \"name\": \"{{dummy}}\",\r\n    \"address\": \"{{dummy}}\",\r\n    \"phone\": \"{{dummy}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/companies",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD COMPANY INVALID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should have 400 value', () => {\r",
									"   pm.response.to.have.status(422);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json; charset=utf-8');\r",
									"}); \r",
									" \r",
									"pm.test('response body should an object', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.haveOwnProperty('status');\r",
									"    pm.expect(responseJson.status).to.equals(false);\r",
									"\r",
									"    pm.expect(responseJson).to.haveOwnProperty('error');\r",
									"    pm.expect(responseJson.error).to.not.equals('');\r",
									"    pm.expect(responseJson.error).to.not.equals(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"{{dummy}}\": \"{{dummy}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/companies",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT MY COMPANY",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"address\": \"Gandrungmanis\",\r\n    \"phone\": \"0819\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/companies",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE COMPANY",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/companies/:id_company",
							"host": [
								"{{url}}"
							],
							"path": [
								"companies",
								":id_company"
							],
							"variable": [
								{
									"key": "id_company",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "LIST CATEGORY",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/categories",
							"host": [
								"{{url}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD CATEGORY",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Spion\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/categories",
							"host": [
								"{{url}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT CATEGORY",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bemper\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/categories/:id_category",
							"host": [
								"{{url}}"
							],
							"path": [
								"categories",
								":id_category"
							],
							"variable": [
								{
									"key": "id_category",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE CATEGORY",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/categories/:id_category",
							"host": [
								"{{url}}"
							],
							"path": [
								"categories",
								":id_category"
							],
							"variable": [
								{
									"key": "id_category",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Items",
			"item": [
				{
					"name": "LIST ITEM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items/:tier/:category",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								":tier",
								":category"
							],
							"variable": [
								{
									"key": "tier",
									"value": "1"
								},
								{
									"key": "category",
									"value": "1",
									"description": "optional"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MY ITEM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items/my/:category",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								"my",
								":category"
							],
							"variable": [
								{
									"key": "category",
									"value": "1",
									"description": "optional"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ITEM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items/item/:id_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								"item",
								":id_item"
							],
							"variable": [
								{
									"key": "id_item",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ITEM DETAIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/items/item/detail/:id_item_detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								"item",
								"detail",
								":id_item_detail"
							],
							"variable": [
								{
									"key": "id_item_detail",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD ITEM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_category\": 1,\r\n    \"name\": \"Barang A\",\r\n    \"desc\": \"Desc A\",\r\n    \"serial_number\": \"0000\",\r\n    \"quantity\": 200,\r\n    \"unit\": \"Kg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT ITEM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_category\": 2,\r\n    \"name\": \"Barang Edit\",\r\n    \"desc\": \"desc edit\",\r\n    \"serial_number\": \"3340\",\r\n    \"unit\": \"new unit\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/items/:id_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								":id_item"
							],
							"variable": [
								{
									"key": "id_item",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ITEM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/items/:id_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								":id_item"
							],
							"variable": [
								{
									"key": "id_item",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT ITEM QUANTITY",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"is_buffer\": true,\r\n    \"quantity\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/items/item/detail/:id_item_detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								"item",
								"detail",
								":id_item_detail"
							],
							"variable": [
								{
									"key": "id_item_detail",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT BUFFER QUANTITY",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"quantity\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/items/item/:id_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"items",
								"item",
								":id_item"
							],
							"variable": [
								{
									"key": "id_item",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "ADD ORDER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"order_number\": \"ORDER000\",\r\n    \"quantity\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/orders/:id_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								":id_item"
							],
							"variable": [
								{
									"key": "id_item",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ORDER",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/orders/:order_number",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								":order_number"
							],
							"variable": [
								{
									"key": "order_number",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT ORDER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"quantity\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/orders/:id_order",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								":id_order"
							],
							"variable": [
								{
									"key": "id_order",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ORDER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/orders/:id_order",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								":id_order"
							],
							"variable": [
								{
									"key": "id_order",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DOC",
			"item": [
				{
					"name": "ADD DOC PO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Downloads/2002.07551.pdf"
								}
							]
						},
						"url": {
							"raw": "{{url}}/doc/po",
							"host": [
								"{{url}}"
							],
							"path": [
								"doc",
								"po"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DOC DN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Downloads/2002.07551.pdf"
								}
							]
						},
						"url": {
							"raw": "{{url}}/doc/dn",
							"host": [
								"{{url}}"
							],
							"path": [
								"doc",
								"dn"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET DOC",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/doc/:id_doc",
							"host": [
								"{{url}}"
							],
							"path": [
								"doc",
								":id_doc"
							],
							"variable": [
								{
									"key": "id_doc",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PO",
			"item": [
				{
					"name": "LIST ALL PO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/po/:tier/:status",
							"host": [
								"{{url}}"
							],
							"path": [
								"po",
								":tier",
								":status"
							],
							"variable": [
								{
									"key": "tier",
									"value": "1"
								},
								{
									"key": "status",
									"value": "1",
									"description": "optional"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MY PO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/po/my/:status",
							"host": [
								"{{url}}"
							],
							"path": [
								"po",
								"my",
								":status"
							],
							"variable": [
								{
									"key": "status",
									"value": "1",
									"description": "optional"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST INCOMING PO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/po/incoming/:status",
							"host": [
								"{{url}}"
							],
							"path": [
								"po",
								"incoming",
								":status"
							],
							"variable": [
								{
									"key": "status",
									"value": "1",
									"description": "optional"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"order_to\": 2,\r\n    \"id_doc\": 1,\r\n    \"po_number\": \"PO0001\",\r\n    \"deadline\": \"2022-10-11T10:19:16.812Z\",\r\n    \"order\": [\r\n        {\r\n            \"id_order\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/po",
							"host": [
								"{{url}}"
							],
							"path": [
								"po"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PO DETAIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/po/detail/:id_po",
							"host": [
								"{{url}}"
							],
							"path": [
								"po",
								"detail",
								":id_po"
							],
							"variable": [
								{
									"key": "id_po",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PO DETAIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/po/detail/:id_po/:id_po_detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"po",
								"detail",
								":id_po",
								":id_po_detail"
							],
							"variable": [
								{
									"key": "id_po",
									"value": "1"
								},
								{
									"key": "id_po_detail",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PO DETAIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"note_po\": \"PO0001\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/po/detail/:id_po/:id_po_detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"po",
								"detail",
								":id_po",
								":id_po_detail"
							],
							"variable": [
								{
									"key": "id_po",
									"value": "1"
								},
								{
									"key": "id_po_detail",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DN",
			"item": [
				{
					"name": "ADD DN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_po\": 1,\r\n    \"id_doc\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/dn",
							"host": [
								"{{url}}"
							],
							"path": [
								"dn"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "COUNT PO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dashboard/count/po",
							"host": [
								"{{url}}"
							],
							"path": [
								"dashboard",
								"count",
								"po"
							]
						}
					},
					"response": []
				},
				{
					"name": "COUNT PO STATUS",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dashboard/count/po/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"dashboard",
								"count",
								"po",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "COUNT INCOMING PO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dashboard/count/incoming_po",
							"host": [
								"{{url}}"
							],
							"path": [
								"dashboard",
								"count",
								"incoming_po"
							]
						}
					},
					"response": []
				},
				{
					"name": "COUNT INCOMING PO STATUS",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dashboard/count/incoming_po/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"dashboard",
								"count",
								"incoming_po",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "COUNT DN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dashboard/count/dn",
							"host": [
								"{{url}}"
							],
							"path": [
								"dashboard",
								"count",
								"dn"
							]
						}
					},
					"response": []
				},
				{
					"name": "COUNT SUPPLIER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dashboard/count/supplier",
							"host": [
								"{{url}}"
							],
							"path": [
								"dashboard",
								"count",
								"supplier"
							]
						}
					},
					"response": []
				},
				{
					"name": "COUNT ITEM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dashboard/count/item",
							"host": [
								"{{url}}"
							],
							"path": [
								"dashboard",
								"count",
								"item"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "GET NOTIFICATION",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/notification",
							"host": [
								"{{url}}"
							],
							"path": [
								"notification"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}